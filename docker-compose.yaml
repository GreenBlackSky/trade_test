version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    build: ./init_kafka/
    depends_on:
      - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  postgres:
    image: postgres
    # ports:
    #   - 5432:5432
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data/
      - ./postgres/schema:/docker-entrypoint-initdb.d/
    env_file:
      - config.env

  pgadmin:
    build: pgadmin
    env_file:
      - config.env
    ports:
      - "5050:80"
    links:
      - "postgres:pgsql-server"

  producer:
    build: ./producer/
    volumes:
      - ./producer/src:/app/app
    depends_on:
      - postgres
      - kafka
    env_file:
      - config.env

  kafka_postgres_bridge:
    build: ./kafka_postgres_bridge/
    volumes:
      - ./kafka_postgres_bridge/src:/app/app
    depends_on:
      - postgres
      - kafka
    env_file:
      - config.env

  api_server:
    build: ./api_server/
    volumes:
      - ./api_server/src:/app/app
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - kafka
    env_file:
      - config.env
  
  frontend:
    build: ./frontend/
    ports:
      - 5000:5000
    depends_on:
      - postgres
      - kafka
    # env_file:
    #   - config.env

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus/config/:/etc/prometheus/
  #     - ./prometheus/prometheus_data:/prometheus
  #   ports:
  #    - 9090:9090

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./grafana/provisioning/:/etc/grafana/provisioning/
  #     - ./grafana/dashboards/:/etc/grafana/dashboards/
  #     - ./grafana/grafana_data:/var/lib/grafana
  #   env_file:
  #     - config.env